//O filter Ã© uma funÃ§Ã£o responsÃ¡vel por realizar algum tipo de filtro no array, de acordo com uma condiÃ§Ã£o.

// O filter faz uma iteraÃ§Ã£o no array e recebe como parÃ¢metro uma callback.
// Relembrando ðŸ§ : Uma callback Ã© uma funÃ§Ã£o que Ã© passada por parÃ¢metro para outra funÃ§Ã£o.
// // Essa callback recebe como primeiro parÃ¢metro o elemento do array: array.filter((item) => {});
// Dentro do escopo da funÃ§Ã£o Ã© onde inserimos a condiÃ§Ã£o a ser filtrada.
// Para refletir ðŸ’­: VocÃª precisa filtrar apenas o nome das pessoas do seu array dados. Ele possui dois tipos de informaÃ§Ãµes: o nome, que Ã© do tipo string, e o nÃºmero de telefone, que Ã© do tipo number. Pensando nisso, como vocÃª faria para pegar apenas os elementos do tipo string, que sÃ£o referentes ao nome das pessoas? ðŸ¤”
// Se vocÃª pensou no filter, acertou! VocÃª pode realizar a filtragem do array dados e na condiÃ§Ã£o, verificar pelos elementos do tipo string. Copie o cÃ³digo abaixo, execute no terminal do seu navegador e veja o que ele te retorna:

const dados = ['Luca', 91234567, 'Ana', 92345678, 'Marlete', 93456789];

dados.filter((item) => typeof item === 'string');
console.log(dados.filter((item) => typeof item !== 'string'));

const listaNumeros = [10, 20, 30, 40];
listaNumeros.filter((number) => number > 20)
console.log(listaNumeros.filter((number) => number > 20));